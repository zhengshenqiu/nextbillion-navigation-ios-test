#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef NBMAPNAVIGATION_SWIFT_H
#define NBMAPNAVIGATION_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFAudio;
@import CarPlay;
@import CoreFoundation;
@import CoreLocation;
@import Foundation;
@import Nbmap;
@import NbmapCoreNavigation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NbmapNavigation",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class UIColor;
@class UIFont;
@class NSCoder;

/// :nodoc:
SWIFT_CLASS_NAMED("StylableLabel")
@interface NBStylableLabel : UILabel
@property (nonatomic, strong) UIColor * _Nonnull normalTextColor;
@property (nonatomic, strong) UIFont * _Nonnull normalFont;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15NbmapNavigation19ArrivalAddressLabel")
@interface ArrivalAddressLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15NbmapNavigation21ArrivalBackgroundView")
@interface ArrivalBackgroundView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15NbmapNavigation23ArrivalDestinationLabel")
@interface ArrivalDestinationLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("ArrivalTimeLabel")
@interface NBArrivalTimeLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15NbmapNavigation17ArrivalTitleLabel")
@interface ArrivalTitleLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("StylableButton")
@interface NBStylableButton : UIButton
@property (nonatomic, strong) UIFont * _Nonnull textFont;
@property (nonatomic, strong) UIColor * _Nonnull textColor;
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
@property (nonatomic) CGFloat borderWidth;
@property (nonatomic) CGFloat cornerRadius;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
/// <code>NBButton</code> sets the tintColor according to the style.
SWIFT_CLASS_NAMED("Button")
@interface NBButton : NBStylableButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("ArrivedButton")
@interface NBArrivedButton : NBButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ArrivedConfirmViewControllerDelegate;
@class NSString;
@class NSBundle;

/// A view controller containing a grid of buttons the user can use to denote an issue their current navigation experience.
SWIFT_CLASS_NAMED("ArrivedConfirmViewController")
@interface NBArrivedConfirmViewController : UIViewController
@property (nonatomic, weak) id <ArrivedConfirmViewControllerDelegate> _Nullable delegate;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


/// The <code>ArrivedViewControllerDelegate</code> protocol provides methods for responding to feedback events.
SWIFT_PROTOCOL("_TtP15NbmapNavigation36ArrivedConfirmViewControllerDelegate_")
@protocol ArrivedConfirmViewControllerDelegate
/// Called when the user opens the feedback form.
- (void)arrivedConfirmViewControllerDidOpen:(NBArrivedConfirmViewController * _Nonnull)arrivedConfirmViewController;
/// Called when the user submits a feedback event.
- (void)arrivedConfirmViewControllerDidConfirm:(NBArrivedConfirmViewController * _Nonnull)arrivedConfirmViewController legIndex:(NSInteger)legIndex;
/// Called when a <code>ArrivedViewController</code> is dismissed for any reason without giving explicit feedback.
- (void)arrivedConfirmViewControllerDidCancel:(NBArrivedConfirmViewController * _Nonnull)arrivedConfirmViewController legIndex:(NSInteger)legIndex;
@end

@class NBEventsManager;
@class UITraitCollection;
@protocol UIViewControllerTransitionCoordinator;
@class UIGestureRecognizer;
@class UITouch;

/// A view controller containing a grid of buttons the user can use to denote an issue their current navigation experience.
SWIFT_CLASS("_TtC15NbmapNavigation21ArrivedViewController")
@interface ArrivedViewController : UIViewController <UIGestureRecognizerDelegate>
/// Initialize a new FeedbackViewController from an <code>EventsManager</code>.
- (nonnull instancetype)initWithDataTracking:(NBEventsManager * _Nullable)dataTracking OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)willTransitionToTraitCollection:(UITraitCollection * _Nonnull)newCollection withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@protocol UIViewControllerAnimatedTransitioning;
@protocol UIViewControllerInteractiveTransitioning;

@interface ArrivedViewController (SWIFT_EXTENSION(NbmapNavigation)) <UIViewControllerTransitioningDelegate>
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("BannerContainerView")
@interface NBBannerContainerView : UIView
- (void)safeAreaInsetsDidChange;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// A banner view that contains the current step instruction along a route and responds to tap and
/// swipe gestures, as the base of <code>InstructionsCardView</code> and <code>InstructionsBannerView</code>.
SWIFT_CLASS("_TtC15NbmapNavigation26BaseInstructionsBannerView")
@interface BaseInstructionsBannerView : UIControl
/// A <code>Boolean</code> value controls whether the banner view reponds to swipe gestures. Defaults to <code>false</code>.
@property (nonatomic) IBInspectable BOOL swipeable;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
@end


/// A cache consists of both in-memory and on-disk components, both of which can be reset.
SWIFT_PROTOCOL_NAMED("BimodalCache")
@protocol NBBimodalCache
- (void)clearMemory;
- (void)clearDiskWithCompletion:(void (^ _Nullable)(void))completion;
@end

@class NSData;

/// A cache which supports storing data
SWIFT_PROTOCOL_NAMED("BimodalDataCache")
@protocol NBBimodalDataCache <NBBimodalCache>
- (void)store:(NSData * _Nonnull)data forKey:(NSString * _Nonnull)key toDisk:(BOOL)toDisk completion:(void (^ _Nullable)(void))completionBlock;
- (NSData * _Nullable)dataForKey:(NSString * _Nullable)forKey SWIFT_WARN_UNUSED_RESULT;
@end

@class UIImage;

/// A cache which supports storing images
SWIFT_PROTOCOL_NAMED("BimodalImageCache")
@protocol NBBimodalImageCache <NBBimodalCache>
- (void)store:(UIImage * _Nonnull)image forKey:(NSString * _Nonnull)key toDisk:(BOOL)toDisk completion:(void (^ _Nullable)(void))completionBlock;
- (UIImage * _Nullable)imageForKey:(NSString * _Nullable)forKey SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("BottomBannerContentView")
@interface NBBottomBannerContentView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("BottomBannerView")
@interface NBBottomBannerView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A user interface element designed to display the estimated arrival time, distance, and time remaining, as well as give the user a control the cancel the navigation session.
IB_DESIGNABLE
SWIFT_CLASS("_TtC15NbmapNavigation26BottomBannerViewController")
@interface BottomBannerViewController : UIViewController
/// Initializes a <code>BottomBannerViewController</code> that provides ETA, Distance to arrival, and Time to arrival.
/// \param nibNameOrNil Ignored.
///
/// \param nibBundleOrNil Ignored.
///
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
/// Initializes a <code>BottomBannerViewController</code> that provides ETA, Distance to arrival, and Time to arrival.
/// \param aDecoder Ignored.
///
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (void)prepareForInterfaceBuilder;
@end


@interface BottomBannerViewController (SWIFT_EXTENSION(NbmapNavigation)) <ArrivedConfirmViewControllerDelegate>
- (void)arrivedConfirmViewControllerDidOpen:(NBArrivedConfirmViewController * _Nonnull)arrivedConfirmViewController;
- (void)arrivedConfirmViewControllerDidConfirm:(NBArrivedConfirmViewController * _Nonnull)arrivedConfirmViewController legIndex:(NSInteger)legIndex;
- (void)arrivedConfirmViewControllerDidCancel:(NBArrivedConfirmViewController * _Nonnull)arrivedConfirmViewController legIndex:(NSInteger)legIndex;
@end



@interface BottomBannerViewController (SWIFT_EXTENSION(NbmapNavigation))
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


SWIFT_CLASS("_TtC15NbmapNavigation17BottomPaddingView")
@interface BottomPaddingView : NBBottomBannerView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





SWIFT_CLASS("_TtC15NbmapNavigation16CPNavigationView")
@interface CPNavigationView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface CPNavigationView (SWIFT_EXTENSION(NbmapNavigation))
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end



/// :nodoc:
SWIFT_CLASS_NAMED("CancelButton")
@interface NBCancelButton : NBButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// <code>CarPlayManager</code> is the main object responsible for orchestrating interactions with a Nbmap map on CarPlay.
/// You do not create instances of this object yourself; instead, use the <code>CarPlayManager.shared</code> class property.
/// Messages declared in the <code>CPApplicationDelegate</code> protocol should be sent to this object in the containing application’s application delegate. Implement <code>CarPlayManagerDelegate</code> in the containing application and assign an instance to the <code>delegate</code> property of the <code>CarPlayManager</code> shared instance.
SWIFT_CLASS("_TtC15NbmapNavigation14CarPlayManager") SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayManager : NSObject
/// If set to <code>true</code>, turn-by-turn directions will simulate the user traveling along the selected route when initiated from CarPlay.
@property (nonatomic) BOOL simulatesLocations;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end





@class CarPlayNavigationViewController;

/// The <code>CarPlayNavigationDelegate</code> protocol provides methods for reacting to significant events during turn-by-turn navigation with <code>CarPlayNavigationViewController</code>.
SWIFT_PROTOCOL_NAMED("CarPlayNavigationDelegate") SWIFT_AVAILABILITY(ios,introduced=13.0)
@protocol NBNavigationCarPlayDelegate
/// Called when the CarPlay navigation view controller is dismissed, such as when the user ends a trip.
/// \param carPlayNavigationViewController The CarPlay navigation view controller that was dismissed.
///
/// \param canceled True if the user dismissed the CarPlay navigation view controller by tapping the Cancel button; false if the navigation view controller dismissed by some other means.
///
- (void)carPlayNavigationViewControllerDidDismiss:(CarPlayNavigationViewController * _Nonnull)carPlayNavigationViewController byCanceling:(BOOL)canceled;
/// Called when the CarPlay navigation view controller detects an arrival.
/// \param carPlayNavigationViewController The CarPlay navigation view controller that was dismissed.
///
- (void)carPlayNavigationViewControllerDidArrive:(CarPlayNavigationViewController * _Nonnull)carPlayNavigationViewController;
@end


SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayManager (SWIFT_EXTENSION(NbmapNavigation)) <NBNavigationCarPlayDelegate>
- (void)carPlayNavigationViewControllerDidArrive:(CarPlayNavigationViewController * _Nonnull)_;
- (void)carPlayNavigationViewControllerDidDismiss:(CarPlayNavigationViewController * _Nonnull)carPlayNavigationViewController byCanceling:(BOOL)canceled;
@end

@class UIApplication;
@class CPInterfaceController;
@class CPWindow;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayManager (SWIFT_EXTENSION(NbmapNavigation)) <CPApplicationDelegate>
- (void)application:(UIApplication * _Nonnull)application didConnectCarInterfaceController:(CPInterfaceController * _Nonnull)interfaceController toWindow:(CPWindow * _Nonnull)window;
- (void)application:(UIApplication * _Nonnull)application didDisconnectCarInterfaceController:(CPInterfaceController * _Nonnull)interfaceController fromWindow:(CPWindow * _Nonnull)window;
@end

@class CPTemplateApplicationScene;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayManager (SWIFT_EXTENSION(NbmapNavigation)) <CPTemplateApplicationSceneDelegate>
- (void)templateApplicationScene:(CPTemplateApplicationScene * _Nonnull)templateApplicationScene didConnectInterfaceController:(CPInterfaceController * _Nonnull)interfaceController toWindow:(CPWindow * _Nonnull)window;
- (void)templateApplicationScene:(CPTemplateApplicationScene * _Nonnull)templateApplicationScene didDisconnectInterfaceController:(CPInterfaceController * _Nonnull)interfaceController fromWindow:(CPWindow * _Nonnull)window;
@end


@class CPTemplate;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayManager (SWIFT_EXTENSION(NbmapNavigation)) <CPInterfaceControllerDelegate>
- (void)templateWillAppear:(CPTemplate * _Nonnull)template_ animated:(BOOL)animated;
- (void)templateDidAppear:(CPTemplate * _Nonnull)template_ animated:(BOOL)animated;
- (void)templateWillDisappear:(CPTemplate * _Nonnull)template_ animated:(BOOL)animated;
- (void)templateDidDisappear:(CPTemplate * _Nonnull)template_ animated:(BOOL)animated;
@end

@class CPListTemplate;
@class CPListItem;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayManager (SWIFT_EXTENSION(NbmapNavigation)) <CPListTemplateDelegate>
- (void)listTemplate:(CPListTemplate * _Nonnull)listTemplate didSelectListItem:(CPListItem * _Nonnull)item completionHandler:(void (^ _Nonnull)(void))completionHandler;
@end


@class CPMapTemplate;
@class CPTrip;
@class CPRouteChoice;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayManager (SWIFT_EXTENSION(NbmapNavigation)) <CPMapTemplateDelegate>
- (void)mapTemplate:(CPMapTemplate * _Nonnull)mapTemplate startedTrip:(CPTrip * _Nonnull)trip usingRouteChoice:(CPRouteChoice * _Nonnull)routeChoice;
- (void)mapTemplate:(CPMapTemplate * _Nonnull)mapTemplate selectedPreviewForTrip:(CPTrip * _Nonnull)trip usingRouteChoice:(CPRouteChoice * _Nonnull)routeChoice;
- (void)mapTemplateDidCancelNavigation:(CPMapTemplate * _Nonnull)mapTemplate;
- (void)mapTemplateDidBeginPanGesture:(CPMapTemplate * _Nonnull)mapTemplate;
- (void)mapTemplate:(CPMapTemplate * _Nonnull)mapTemplate didEndPanGestureWithVelocity:(CGPoint)velocity;
- (void)mapTemplateWillDismissPanningInterface:(CPMapTemplate * _Nonnull)mapTemplate;
- (void)mapTemplate:(CPMapTemplate * _Nonnull)mapTemplate didUpdatePanGestureWithTranslation:(CGPoint)translation velocity:(CGPoint)velocity;
- (void)mapTemplate:(CPMapTemplate * _Nonnull)mapTemplate panWithDirection:(CPPanDirection)direction;
@end

@class CPSearchTemplate;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayManager (SWIFT_EXTENSION(NbmapNavigation)) <CPSearchTemplateDelegate>
- (void)searchTemplate:(CPSearchTemplate * _Nonnull)searchTemplate updatedSearchText:(NSString * _Nonnull)searchText completionHandler:(void (^ _Nonnull)(NSArray<CPListItem *> * _Nonnull))completionHandler;
- (void)searchTemplateSearchButtonPressed:(CPSearchTemplate * _Nonnull)searchTemplate;
- (void)searchTemplate:(CPSearchTemplate * _Nonnull)searchTemplate selectedResult:(CPListItem * _Nonnull)item completionHandler:(void (^ _Nonnull)(void))completionHandler;
@end


@class NBNavigationMapView;

/// <code>CarPlayNavigationViewController</code> is a fully-featured turn-by-turn navigation UI for CarPlay.
/// seealso:
/// NavigationViewController
SWIFT_CLASS("_TtC15NbmapNavigation31CarPlayNavigationViewController") SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayNavigationViewController : UIViewController <NGLMapViewDelegate>
/// The view controller’s delegate.
@property (nonatomic, weak) id <NBNavigationCarPlayDelegate> _Nullable delegate;
/// The map view showing the route and the user’s location.
@property (nonatomic, strong) NBNavigationMapView * _Nonnull navigationMapView;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)viewSafeAreaInsetsDidChange;
/// Begins a navigation session along the given trip.
/// \param trip The trip to begin navigating along.
///
- (void)startNavigationSessionForTrip:(CPTrip * _Nonnull)trip;
/// Ends the current navigation session.
/// \param canceled A Boolean value indicating whether this method is being called because the user intends to cancel the trip, as opposed to letting it run to completion.
///
- (void)exitNavigationByCanceling:(BOOL)canceled;
/// A Boolean value indicating whether the map should follow the user’s location and rotate when the course changes.
/// When this property is true, the map follows the user’s location and rotates when their course changes. Otherwise, the map shows an overview of the route.
@property (nonatomic) BOOL tracksUserCourse;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class NGLSource;
@class NGLStyleLayer;
@class NBWaypoint;
@class NBNavRoute;
@class NGLShape;

/// The <code>NavigationMapViewDelegate</code> provides methods for configuring the NavigationMapView, as well as responding to events triggered by the NavigationMapView.
SWIFT_PROTOCOL_NAMED("NavigationMapViewDelegate")
@protocol NBNavigationMapViewDelegate
@optional
/// Asks the receiver to return an NGLStyleLayer for routes, given an identifier and source.
/// This method is invoked when the map view loads and any time routes are added.
/// \param mapView The NavigationMapView.
///
/// \param identifier The style identifier.
///
/// \param source The Layer source containing the route data that this method would style.
///
///
/// returns:
/// An NGLStyleLayer that the map applies to all routes.
- (NGLStyleLayer * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView routeStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(NGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Asks the receiver to return an NGLStyleLayer for waypoint symbols, given an identifier and source.
/// This method is invoked when the map view loads and any time waypoints are added.
/// \param mapView The NavigationMapView.
///
/// \param identifier The style identifier.
///
/// \param source The Layer source containing the waypoint data that this method would style.
///
///
/// returns:
/// An NGLStyleLayer that the map applies to all waypoint symbols.
- (NGLStyleLayer * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView waypointSymbolStyleLayerWithIdentifier:(NSString * _Nonnull)identifier waypoints:(NSArray<NBWaypoint *> * _Nonnull)waypoints source:(NGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Asks the receiver to return an NGLStyleLayer for route casings, given an identifier and source.
/// This method is invoked when the map view loads and anytime routes are added.
/// note:
/// Specify a casing to ensure good contrast between the route line and the underlying map layers.
/// \param mapView The NavigationMapView.
///
/// \param identifier The style identifier.
///
/// \param source The Layer source containing the route data that this method would style.
///
///
/// returns:
/// An NGLStyleLayer that the map applies to the route.
- (NGLStyleLayer * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView routeCasingStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(NGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Asks the receiver to return an NGLStyleLayer for alternative route, given an identifier and source.
/// This method is invoked when the map view loads and anytime routes are added.
/// note:
/// Specify a casing to ensure good contrast between the route line and the underlying map layers.
/// \param mapView The NavigationMapView.
///
/// \param identifier The style identifier.
///
/// \param source The Layer source containing the route data that this method would style.
///
///
/// returns:
/// An NGLStyleLayer that the map applies to the route.
- (NGLStyleLayer * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView alternativeRouteStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(NGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Asks the receiver to return an NGLStyleLayer for alternative route casings, given an identifier and source.
/// This method is invoked when the map view loads and anytime routes are added.
/// note:
/// Specify a casing to ensure good contrast between the route line and the underlying map layers.
/// \param mapView The NavigationMapView.
///
/// \param identifier The style identifier.
///
/// \param source The Layer source containing the route data that this method would style.
///
///
/// returns:
/// An NGLStyleLayer that the map applies to the route.
- (NGLStyleLayer * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView alternativeRouteCasingStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(NGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Tells the receiver that the user has selected a route by interacting with the map view.
/// \param mapView The NavigationMapView.
///
/// \param route The route that was selected.
///
- (void)navigationMapView:(NBNavigationMapView * _Nonnull)mapView didSelectRoute:(NBNavRoute * _Nonnull)route;
/// Tells the receiver that a waypoint was selected.
/// \param mapView The NavigationMapView.
///
/// \param waypoint The waypoint that was selected.
///
- (void)navigationMapView:(NBNavigationMapView * _Nonnull)mapView didSelectWaypoint:(NBWaypoint * _Nonnull)waypoint;
/// Asks the receiver to return an NGLShape that describes the geometry of the route.
/// note:
/// The returned value represents the route in full detail. For example, individual <code>NGLPolyline</code> objects in an <code>NGLShapeCollectionFeature</code> object can represent traffic congestion segments. For improved performance, you should also implement <code>navigationMapView(_:simplifiedShapeFor:)</code>, which defines the overall route as a single feature.
/// \param mapView The NavigationMapView.
///
/// \param routes The routes that the sender is asking about. The first route will always be rendered as the main route, while all subsequent routes will be rendered as alternate routes.
///
///
/// returns:
/// Optionally, a <code>NGLShape</code> that defines the shape of the route, or <code>nil</code> to use default behavior.
- (NGLShape * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView shapeForRoutes:(NSArray<NBNavRoute *> * _Nonnull)routes SWIFT_WARN_UNUSED_RESULT;
/// Asks the receiver to return an NGLShape that describes the geometry of the route at lower zoomlevels.
/// note:
/// The returned value represents the simplfied route. It is designed to be used with `navigationMapView(_:shapeFor:), and if used without its parent method, can cause unexpected behavior.
/// \param mapView The NavigationMapView.
///
/// \param route The route that the sender is asking about.
///
///
/// returns:
/// Optionally, a <code>NGLShape</code> that defines the shape of the route at lower zoomlevels, or <code>nil</code> to use default behavior.
- (NGLShape * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView simplifiedShapeForRoute:(NBNavRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
/// Asks the receiver to return an NGLShape that describes the geometry of the waypoint.
/// \param mapView The NavigationMapView.
///
/// \param waypoints The waypoints to be displayed on the map.
///
///
/// returns:
/// Optionally, a <code>NGLShape</code> that defines the shape of the waypoint, or <code>nil</code> to use default behavior.
- (NGLShape * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView shapeForWaypoints:(NSArray<NBWaypoint *> * _Nonnull)waypoints legIndex:(NSInteger)legIndex SWIFT_WARN_UNUSED_RESULT;
@end

@class NGLMapView;
@class NGLStyle;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayNavigationViewController (SWIFT_EXTENSION(NbmapNavigation)) <NBNavigationMapViewDelegate>
- (void)mapView:(NGLMapView * _Nonnull)mapView didFinishLoadingStyle:(NGLStyle * _Nonnull)style;
@end

@class CPSessionConfiguration;

SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayNavigationViewController (SWIFT_EXTENSION(NbmapNavigation)) <CPSessionConfigurationDelegate>
- (void)sessionConfiguration:(CPSessionConfiguration * _Nonnull)sessionConfiguration contentStyleChanged:(CPContentStyle)contentStyle;
@end


@class NBStyleManager;
@class CLLocation;
@class NBStyle;

/// The <code>StyleManagerDelegate</code> protocol defines a set of methods used for controlling the style.
SWIFT_PROTOCOL_NAMED("StyleManagerDelegate")
@protocol NBStyleManagerDelegate <NSObject>
/// Asks the delegate for a location to use when calculating sunset and sunrise.
- (CLLocation * _Nullable)locationForStyleManager:(NBStyleManager * _Nonnull)styleManager SWIFT_WARN_UNUSED_RESULT;
@optional
/// Informs the delegate that a style was applied.
- (void)styleManager:(NBStyleManager * _Nonnull)styleManager didApply:(NBStyle * _Nonnull)style;
/// Informs the delegate that the manager forcefully refreshed UIAppearance.
- (void)styleManagerDidRefreshAppearance:(NBStyleManager * _Nonnull)styleManager;
@end


SWIFT_AVAILABILITY(ios,introduced=13.0)
@interface CarPlayNavigationViewController (SWIFT_EXTENSION(NbmapNavigation)) <NBStyleManagerDelegate>
- (CLLocation * _Nullable)locationForStyleManager:(NBStyleManager * _Nonnull)styleManager SWIFT_WARN_UNUSED_RESULT;
- (void)styleManager:(NBStyleManager * _Nonnull)styleManager didApply:(NBStyle * _Nonnull)style;
- (void)styleManagerDidRefreshAppearance:(NBStyleManager * _Nonnull)styleManager;
@end



SWIFT_CLASS_NAMED("CompleteLabel")
@interface NBCompleteLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("LineView")
@interface NBLineView : UIView
@property (nonatomic, strong) UIColor * _Nonnull lineColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
IB_DESIGNABLE
SWIFT_CLASS_NAMED("DashedLineView")
@interface NBDashedLineView : NBLineView
@property (nonatomic) IBInspectable CGFloat dashedLength;
@property (nonatomic) IBInspectable CGFloat dashedGap;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DataCache")
@interface NBDataCache : NSObject <NBBimodalDataCache>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)store:(NSData * _Nonnull)data forKey:(NSString * _Nonnull)key toDisk:(BOOL)toDisk completion:(void (^ _Nullable)(void))completion;
- (NSData * _Nullable)dataForKey:(NSString * _Nullable)key SWIFT_WARN_UNUSED_RESULT;
- (void)clearMemory;
- (void)clearDiskWithCompletion:(void (^ _Nullable)(void))completion;
@end

enum NBStyleType : NSInteger;
@class NSURL;

/// <code>Style</code> is a convenient wrapper for styling the appearance of various interface components throughout the Navigation UI.
/// Styles are applied globally using <code>UIAppearance</code>. You should call <code>Style.apply()</code> to apply the style to the <code>NavigationViewController</code>.
SWIFT_CLASS_NAMED("Style")
@interface NBStyle : NSObject
/// Sets the tint color for guidance arrow, highlighted text, progress bar and more.
@property (nonatomic, strong) UIColor * _Nullable tintColor;
/// Sets the font family for all labels.
@property (nonatomic, copy) NSString * _Nullable fontFamily;
/// Describes the situations in which the style should be used. By default, the style will be used during the daytime.
@property (nonatomic) enum NBStyleType styleType;
/// URL of the style to display on the map during turn-by-turn navigation.
@property (nonatomic, copy) NSURL * _Nonnull mapStyleURL;
/// URL of the style to display on the map when previewing a route, for example on CarPlay.
@property (nonatomic, copy) NSURL * _Nonnull previewMapStyleURL;
/// Applies the style for all changed properties.
- (void)apply;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// <code>DefaultStyle</code> is default style for Nbmap Navigation SDK.
SWIFT_CLASS_NAMED("DayStyle")
@interface NBDayStyle : NBStyle
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)apply;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("DismissButton")
@interface NBDismissButton : NBButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("DistanceLabel")
@interface NBDistanceLabel : NBStylableLabel
@property (nonatomic, strong) UIColor * _Nonnull valueTextColor;
@property (nonatomic, strong) UIColor * _Nonnull unitTextColor;
@property (nonatomic, strong) UIFont * _Nonnull valueFont;
@property (nonatomic, strong) UIFont * _Nonnull unitFont;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("DistanceRemainingLabel")
@interface NBDistanceRemainingLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("EndOfRouteButton")
@interface NBEndOfRouteButton : NBStylableButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSTextContainer;

/// :nodoc:
SWIFT_CLASS_NAMED("StylableTextView")
@interface NBStylableTextView : UITextView
@property (nonatomic, strong) UIColor * _Nonnull normalTextColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("EndOfRouteCommentView")
@interface NBEndOfRouteCommentView : NBStylableTextView
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=7.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("EndOfRouteContentView")
@interface NBEndOfRouteContentView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("EndOfRouteStaticLabel")
@interface NBEndOfRouteStaticLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("EndOfRouteTitleLabel")
@interface NBEndOfRouteTitleLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A single feedback item displayed on an instance of <code>FeedbackViewController</code>.
SWIFT_CLASS_NAMED("FeedbackItem")
@interface NBFeedbackItem : NSObject
/// The title of feedback item. This will be rendered directly below the image.
@property (nonatomic, copy) NSString * _Nonnull title;
/// An image representation of the feedback.
@property (nonatomic, strong) UIImage * _Nonnull image;
/// The type of feedback that best describes the event.
@property (nonatomic) enum NBFeedbackType feedbackType;
/// Creates a new <code>FeedbackItem</code>.
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title image:(UIImage * _Nonnull)image feedbackType:(enum NBFeedbackType)feedbackType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol FeedbackViewControllerDelegate;

/// A view controller containing a grid of buttons the user can use to denote an issue their current navigation experience.
SWIFT_CLASS_NAMED("FeedbackViewController")
@interface NBFeedbackViewController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, weak) id <FeedbackViewControllerDelegate> _Nullable delegate;
/// Initialize a new FeedbackViewController from an <code>EventsManager</code>.
- (nonnull instancetype)initWithDataTracking:(NBEventsManager * _Nullable)dataTracking OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)willTransitionToTraitCollection:(UITraitCollection * _Nonnull)newCollection withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
/// Instantly dismisses the FeedbackViewController if it is currently presented.
- (void)dismissFeedback;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class UICollectionView;
@class UICollectionViewLayout;
@class NSIndexPath;

@interface NBFeedbackViewController (SWIFT_EXTENSION(NbmapNavigation)) <UICollectionViewDelegateFlowLayout>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


@interface NBFeedbackViewController (SWIFT_EXTENSION(NbmapNavigation)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface NBFeedbackViewController (SWIFT_EXTENSION(NbmapNavigation)) <UIViewControllerTransitioningDelegate>
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
@end

@class UICollectionViewCell;
@class UIScrollView;

@interface NBFeedbackViewController (SWIFT_EXTENSION(NbmapNavigation)) <UICollectionViewDataSource>
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end

@class NSUUID;

/// The <code>FeedbackViewControllerDelegate</code> protocol provides methods for responding to feedback events.
SWIFT_PROTOCOL("_TtP15NbmapNavigation30FeedbackViewControllerDelegate_")
@protocol FeedbackViewControllerDelegate
@optional
/// Called when the user opens the feedback form.
- (void)feedbackViewControllerDidOpen:(NBFeedbackViewController * _Nonnull)feedbackViewController;
/// Called when the user submits a feedback event.
- (void)feedbackViewController:(NBFeedbackViewController * _Nonnull)feedbackViewController didSendFeedbackItem:(NBFeedbackItem * _Nonnull)feedbackItem UUID:(NSUUID * _Nonnull)uuid;
/// Called when a <code>FeedbackViewController</code> is dismissed for any reason without giving explicit feedback.
- (void)feedbackViewControllerDidCancel:(NBFeedbackViewController * _Nonnull)feedbackViewController;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("FloatingButton")
@interface NBFloatingButton : NBButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc
SWIFT_CLASS_NAMED("StylableView")
@interface NBStylableView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// <code>GenericRouteShield</code> is a class to render routes that do not have route-shields.
SWIFT_CLASS("_TtC15NbmapNavigation18GenericRouteShield")
@interface GenericRouteShield : NBStylableView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
/// <code>HighlightedButton</code> sets the button’s titleColor for normal control state according to the style in addition to the styling behavior inherited from
/// <code>Button</code>.
SWIFT_CLASS_NAMED("HighlightedButton")
@interface NBHighlightedButton : NBButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("InstructionLabel")
@interface NBInstructionLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("InstructionsBannerContentView")
@interface NBInstructionsBannerContentView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A banner view that contains the current step instruction and responds to tap and swipe gestures.
/// This class responds and gets updated as the user progresses along a route according to the
/// <code>NavigationComponent</code> and <code>BaseInstructionsBannerView</code> protocol.
IB_DESIGNABLE
SWIFT_CLASS("_TtC15NbmapNavigation22InstructionsBannerView")
@interface InstructionsBannerView : BaseInstructionsBannerView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// A junction view shows an image depicting the layout of a highway junction.
/// As the user approaches certain junctions, an enlarged illustration of the junction appears in this view to help the user understand a complex maneuver. A junction view only appears when the relevant data is available.
SWIFT_CLASS("_TtC15NbmapNavigation12JunctionView")
@interface JunctionView : UIImageView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end


/// :nodoc:
SWIFT_CLASS("_TtC15NbmapNavigation8LaneView")
@interface LaneView : UIView
@property (nonatomic, readonly) CGSize intrinsicContentSize;
/// Color of the maneuver direction (applied only when <code>LaneView.isUsable</code> is set to <code>true</code>). In case if
/// <code>LaneView.showHighlightedColors</code> is set to <code>true</code> this value is not used, <code>LaneView.primaryColorHighlighted</code>
/// is used instead.
@property (nonatomic, strong) UIColor * _Nonnull primaryColor;
/// Color of the directions that the lane is reserved for (except the one that is applicable to the
/// current route). In case if <code>LaneView.showHighlightedColors</code> is set to <code>true</code> this value is not used,
/// <code>LaneView.secondaryColorHighlighted</code> is used instead.
@property (nonatomic, strong) UIColor * _Nonnull secondaryColor;
/// Highlighted color of the directions that the lane is reserved for (except the one that is
/// applicable to the current route).
@property (nonatomic, strong) UIColor * _Nonnull primaryColorHighlighted;
/// Highlighted color of the directions that the lane is reserved for (except the one that is applicable
/// to the current route).
@property (nonatomic, strong) UIColor * _Nonnull secondaryColorHighlighted;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end

enum LanesStyleKitResizingBehavior : NSInteger;

SWIFT_CLASS("_TtC15NbmapNavigation13LanesStyleKit")
@interface LanesStyleKit : NSObject
/// / Drawing Methods
+ (void)drawLaneSharpTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size;
+ (void)drawLaneUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneTurnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawLaneUturnUsingUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSharpTurnUsingSharpTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnOrSharpTurnUsingSharpTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneTurnOrSharpTurnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnOrUturnUsingUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnOrTurnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrUturnUsingUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneTurnOrUturnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneTurnOrUturnUsingUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneTurnOrSharpTurnUsingSharpTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSharpTurnUsingSharpTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrTurnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnOrSharpTurnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrUturnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSlightTurnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrSlightTurnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrTurnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnOrUturnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSlightTurnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSharpTurnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrTurnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnOrTurnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrSlightTurnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrTurnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSharpTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnOrTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnOrSharpTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneSlightTurnOrUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneTurnOrSharpTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneTurnOrUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrStraightOrTurnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrStraightOrTurnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrTurnOrUturnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrTurnOrUturnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrTurnOrUturnUsingUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSlightTurnOrTurnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSlightTurnOrTurnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSlightTurnOrTurnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrStraightOrSlightTurnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrStraightOrSlightTurnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrStraightOrTurnUsingTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrStraightOrTurnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrStraightOrSlightTurnUsingStraightWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrStraightOrSlightTurnUsingSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrStraightOrSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrStraightOrSlightTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeTurnOrStraightOrTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneOppositeSlightTurnOrStraightOrTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrTurnOrUturnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
+ (void)drawLaneStraightOrSlightTurnOrTurnWithFrame:(CGRect)targetFrame resizing:(enum LanesStyleKitResizingBehavior)resizing secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size flipHorizontally:(BOOL)flipHorizontally;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, LanesStyleKitResizingBehavior, "ResizingBehavior", open) {
  LanesStyleKitResizingBehaviorAspectFit = 0,
/// The content is proportionally resized to fit into the target rectangle.
  LanesStyleKitResizingBehaviorAspectFill = 1,
/// The content is proportionally resized to completely fill the target rectangle.
  LanesStyleKitResizingBehaviorStretch = 2,
/// The content is stretched to match the entire target rectangle.
  LanesStyleKitResizingBehaviorCenter = 3,
};



/// :nodoc:
IB_DESIGNABLE
SWIFT_CLASS_NAMED("LanesView")
@interface NBLanesView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
@end


SWIFT_CLASS("_TtC15NbmapNavigation14LegSummaryCell")
@interface LegSummaryCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// :nodoc:
SWIFT_CLASS_NAMED("ManeuverContainerView")
@interface NBManeuverContainerView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NBVisualInstruction;

/// :nodoc:
IB_DESIGNABLE
SWIFT_CLASS_NAMED("ManeuverView")
@interface NBManeuverView : UIView
@property (nonatomic, strong) UIColor * _Nonnull primaryColor;
@property (nonatomic, strong) UIColor * _Nonnull secondaryColor;
@property (nonatomic) BOOL isStart;
@property (nonatomic) BOOL isEnd;
/// The current instruction displayed in the maneuver view.
@property (nonatomic, strong) NBVisualInstruction * _Nullable visualInstruction;
/// This indicates the side of the road currently driven on.
@property (nonatomic) enum NBDrivingSide drivingSide;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

enum ManeuversStyleKitResizingBehavior : NSInteger;

SWIFT_CLASS_NAMED("ManeuversStyleKit")
@interface NBManeuversStyleKit : NSObject
/// / Drawing Methods
+ (void)drawArrow180rightWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawArrowrightWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawArrowslightrightWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawArrowstraightWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawArrowsharprightWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawArriveWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawStartingWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawDestinationWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawMergeWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size;
+ (void)drawForkWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size;
+ (void)drawOfframpWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size;
+ (void)drawArriverightWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
+ (void)drawRoundaboutWithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor secondaryColor:(UIColor * _Nonnull)secondaryColor size:(CGSize)size roundabout_angle:(CGFloat)roundabout_angle roundabout_radius:(CGFloat)roundabout_radius;
+ (void)drawArriveright2WithFrame:(CGRect)targetFrame resizing:(enum ManeuversStyleKitResizingBehavior)resizing primaryColor:(UIColor * _Nonnull)primaryColor size:(CGSize)size;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, ManeuversStyleKitResizingBehavior, "ResizingBehavior", open) {
  ManeuversStyleKitResizingBehaviorAspectFit = 0,
/// The content is proportionally resized to fit into the target rectangle.
  ManeuversStyleKitResizingBehaviorAspectFill = 1,
/// The content is proportionally resized to completely fill the target rectangle.
  ManeuversStyleKitResizingBehaviorStretch = 2,
/// The content is stretched to match the entire target rectangle.
  ManeuversStyleKitResizingBehaviorCenter = 3,
};


/// :nodoc:
SWIFT_CLASS_NAMED("MarkerView")
@interface NBMarkerView : UIView
@property (nonatomic, strong) UIColor * _Nonnull innerColor;
@property (nonatomic, strong) UIColor * _Nonnull shadowColor;
@property (nonatomic, strong) UIColor * _Nonnull pinColor;
@property (nonatomic, strong) UIColor * _Nonnull strokeColor;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)layoutSubviews;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15NbmapNavigation10NBGeocoder")
@interface NBGeocoder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NGLAccountManager (SWIFT_EXTENSION(NbmapNavigation))
/// Returns true if the map’s endpoint is China.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL hasChinaBaseURL;)
+ (BOOL)hasChinaBaseURL SWIFT_WARN_UNUSED_RESULT;
@end



@interface NGLStyle (SWIFT_EXTENSION(NbmapNavigation))
/// Returns the URL to the current version of the Nbmap Navigation Guidance Day style.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull navigationGuidanceDayStyleURL;)
+ (NSURL * _Nonnull)navigationGuidanceDayStyleURL SWIFT_WARN_UNUSED_RESULT;
/// Returns the URL to the current version of the Nbmap Navigation Guidance Night style.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull navigationGuidanceNightStyleURL;)
+ (NSURL * _Nonnull)navigationGuidanceNightStyleURL SWIFT_WARN_UNUSED_RESULT;
/// Returns the URL to the current version of the Nbmap Navigation Preview Day style.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull navigationPreviewDayStyleURL;)
+ (NSURL * _Nonnull)navigationPreviewDayStyleURL SWIFT_WARN_UNUSED_RESULT;
/// Returns the URL to the current version of the Nbmap Navigation Preview Night style.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull navigationPreviewNightStyleURL;)
+ (NSURL * _Nonnull)navigationPreviewNightStyleURL SWIFT_WARN_UNUSED_RESULT;
@end







/// <code>NavigationCamera</code> class provides functionality, which allows to manage camera related states
/// and transitions in a typical navigation scenarios. It’s fed with <code>CameraOptions</code> via the <code>ViewportDataSource</code>
/// protocol and executes transitions using <code>CameraStateTransition</code> protocol.
SWIFT_CLASS("_TtC15NbmapNavigation16NavigationCamera")
@interface NavigationCamera : NSObject
/// Call to this method immediately moves <code>NavigationCamera</code> to <code>NavigationCameraState.idle</code> state
/// and stops all pending transitions.
- (void)stop;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@protocol NGLFeature;
enum DurationSymbolType : NSInteger;

/// <code>NavigationMapView</code> is a subclass of <code>NGLMapView</code> with convenience functions for adding <code>Route</code> lines to a map.
SWIFT_CLASS_NAMED("NavigationMapView")
@interface NBNavigationMapView : NGLMapView <NGLMapViewDelegate, UIGestureRecognizerDelegate>
/// Returns the altitude that the map camera initally defaults to.
@property (nonatomic) CLLocationDistance defaultAltitude;
/// Returns the altitude the map conditionally zooms out to when user is on a motorway, and the maneuver length is sufficently long.
@property (nonatomic) CLLocationDistance zoomedOutMotorwayAltitude;
/// Returns the threshold for what the map considers a “long-enough” maneuver distance to trigger a zoom-out when the user enters a motorway.
@property (nonatomic) CLLocationDistance longManeuverDistance;
/// Maximum distance the user can tap for a selection to be valid when selecting an alternate route.
@property (nonatomic) CGFloat tapGestureDistanceThreshold;
@property (nonatomic, strong) UIColor * _Nonnull trafficUnknownColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficLowColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficModerateColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficHeavyColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficSevereColor;
@property (nonatomic, strong) UIColor * _Nonnull routeCasingColor;
@property (nonatomic, strong) UIColor * _Nonnull routeAlternateColor;
@property (nonatomic, strong) UIColor * _Nonnull routeAlternateCasingColor;
@property (nonatomic, strong) UIColor * _Nonnull maneuverArrowColor;
@property (nonatomic, strong) UIColor * _Nonnull maneuverArrowStrokeColor;
@property (nonatomic, strong) UIColor * _Nonnull traversedRouteColor;
@property (nonatomic, strong) UIColor * _Nonnull alternativeTrafficUnknownColor;
@property (nonatomic, strong) UIColor * _Nonnull alternativeTrafficLowColor;
@property (nonatomic, strong) UIColor * _Nonnull alternativeTrafficModerateColor;
@property (nonatomic, strong) UIColor * _Nonnull alternativeTrafficHeavyColor;
@property (nonatomic, strong) UIColor * _Nonnull alternativeTrafficSevereColor;
@property (nonatomic, strong) UIColor * _Nonnull routeRestrictedAreaColor;
@property (nonatomic) BOOL showsUserLocation;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame styleURL:(NSURL * _Nullable)styleURL OBJC_DESIGNATED_INITIALIZER;
- (void)reloadStyle:(id _Nullable)sender;
- (void)prepareForInterfaceBuilder;
- (CGPoint)anchorPointForGesture:(UIGestureRecognizer * _Nonnull)gesture SWIFT_WARN_UNUSED_RESULT;
- (void)mapViewDidFinishRenderingFrameFullyRendered:(BOOL)fullyRendered;
- (void)movePuckToCurrentLocationWithLocation:(CLLocation * _Nullable)location animated:(BOOL)animated updateWaynameLabel:(BOOL)updateWaynameLabel;
/// Find the visible road network features acording to the given coordinate and area length
- (NSArray<id <NGLFeature>> * _Nonnull)getVisibleRoadFeaturesIn:(CLLocationCoordinate2D)coordinate length:(CLLocationDistance)length SWIFT_WARN_UNUSED_RESULT;
- (void)showcase:(NSArray<NBNavRoute *> * _Nonnull)routes padding:(UIEdgeInsets)padding animated:(BOOL)animated;
/// Adds or updates both the route line and the route line casing
- (void)showRoutes:(NSArray<NBNavRoute *> * _Nonnull)routes legIndex:(NSInteger)legIndex;
/// Removes route line and route line casing from map
- (void)removeRoutes;
/// Adds the route waypoints to the map given the current leg index. Previous waypoints for completed legs will be omitted.
- (void)showWaypoints:(NBNavRoute * _Nonnull)route legIndex:(NSInteger)legIndex;
/// Removes all waypoints from the map.
- (void)removeWaypoints;
/// Shows the step arrow given the current <code>RouteProgress</code>.
- (void)addArrowWithRoute:(NBNavRoute * _Nonnull)route legIndex:(NSInteger)legIndex stepIndex:(NSInteger)stepIndex;
/// Removes the step arrow from the map.
- (void)removeArrow;
- (void)showRouteDurationSymbol:(NSArray<NBNavRoute *> * _Nonnull)routes durationSymbolType:(enum DurationSymbolType)durationSymbolType;
- (void)removeRouteDurationSymbol;
- (void)appendWayNameLayer;
/// Attempts to localize road labels into the local language and other labels
/// into the system’s preferred language.
/// When this property is enabled, the style automatically modifies the <code>text</code>
/// property of any symbol style layer whose source is the
/// <a href="https://www.nbmap.com/vector-tiles/nbmap-streets-v7/#overview">Nbmap
/// Streets source</a>. On iOS, the user can set the system’s preferred
/// language in Settings, General Settings, Language & Region.
/// Unlike the <code>NGLStyle.localizeLabels(into:)</code> method, this method localizes
/// road labels into the local language, regardless of the system’s preferred
/// language, in an effort to match road signage. The turn banner always
/// displays road names and exit destinations in the local language, so you
/// should call this method in the
/// <code>NGLMapViewDelegate.mapView(_:didFinishLoading:)</code> method of any delegate of
/// a standalone <code>NavigationMapView</code>. The map view embedded in
/// <code>NavigationViewController</code> is localized automatically, so you do not need
/// to call this method on the value of <code>NavigationViewController.mapView</code>.
- (void)localizeLabels;
- (void)showVoiceInstructionsOnMapWithRoute:(NBNavRoute * _Nonnull)route;
/// Sets the camera directly over a series of coordinates.
- (void)setOverheadCameraViewFrom:(CLLocationCoordinate2D)userLocation along:(NSArray<NSValue *> * _Nonnull)coordinates for:(UIEdgeInsets)bounds;
@end

typedef SWIFT_ENUM(NSInteger, DurationSymbolType, open) {
  DurationSymbolTypeROUTE_DURATION = 0,
  DurationSymbolTypeROUTE_DURATION_DIFF = 1,
  DurationSymbolTypeNONE_ROUTE_DURATION = 2,
};







SWIFT_CLASS_NAMED("NavigationPreviewController")
@interface NavigationPreviewController : UIViewController <NGLMapViewDelegate>
- (nonnull instancetype)initWithRoute:(NBNavRoute * _Nonnull)route styles:(NBStyle * _Nonnull)style OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (void)mapViewDidFinishLoadingMap:(NGLMapView * _Nonnull)mapView;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end



/// A view that represents the root view of the NbmapNavigation drop-in UI.
/// <h2>Components</h2>
/// <ol>
///   <li>
///     InstructionsBannerView
///   </li>
///   <li>
///     InformationStackView
///   </li>
///   <li>
///     BottomBannerView
///   </li>
///   <li>
///     ResumeButton
///   </li>
///   <li>
///     WayNameLabel
///   </li>
///   <li>
///     FloatingStackView
///   </li>
///   <li>
///     NavigationMapView
///   </li>
///   <li>
///     SpeedView
///   </li>
/// </ol>
/// \code
/// +--------------------+
/// |         1          |
/// +--------------------+
/// |         2          |
/// +----------------+---+
/// |                |   |
/// |                | 6 |
/// |                |   |
/// |         7      +---+
/// |                    |
/// |
/// +--------------------|
/// | 8 |                |
/// +------------+       |
/// |  4  ||  5  |       |
/// +------------+-------+
/// |         3          |
/// +--------------------+
///
/// \endcode
IB_DESIGNABLE
SWIFT_CLASS_NAMED("NavigationView")
@interface NBNavigationView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface NBNavigationView (SWIFT_EXTENSION(NbmapNavigation))
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end

@class NGLMapCamera;
@protocol NGLAnnotation;
@class NBRouteVoiceController;

/// <code>NavigationViewController</code> is a fully-featured turn-by-turn navigation UI.
/// It provides step by step instructions, an overview of all steps for the given route and support for basic styling.
/// seealso:
/// CarPlayNavigationViewController
SWIFT_CLASS_NAMED("NavigationViewController")
@interface NBNavigationViewController : UIViewController
/// The <code>NavigationMapView</code> displayed inside the view controller.
/// note:
/// Do not change <code>NavigationMapView.delegate</code> property; instead, implement the corresponding methods on <code>NavigationViewControllerDelegate</code>.
@property (nonatomic, strong) NBNavigationMapView * _Nullable navigationMapView;
/// An optional <code>NGLMapCamera</code> you can use to improve the initial transition from a previous viewport and prevent a trigger from an excessive significant location update.
@property (nonatomic, strong) NGLMapCamera * _Nullable pendingCamera;
/// An instance of <code>NGLAnnotation</code> representing the origin of your route.
@property (nonatomic, strong) id <NGLAnnotation> _Nullable origin;
/// Provides access to various speech synthesizer options.
/// See <code>RouteVoiceController</code> for more information.
@property (nonatomic, strong) NBRouteVoiceController * _Null_unspecified voiceController;
/// Determines whether the user location annotation is moved from the raw user location reported by the device to the nearest location along the route.
/// By default, this property is set to <code>true</code>, causing the user location annotation to be snapped to the route.
@property (nonatomic) BOOL snapsUserLocationAnnotationToRoute;
/// Toggles sending of UILocalNotification upon upcoming steps when application is in the background. Defaults to <code>true</code>.
@property (nonatomic) BOOL sendsNotifications;
/// If true, the map style and UI will automatically be updated given the time of day.
@property (nonatomic) BOOL automaticallyAdjustsStyleForTimeOfDay;
/// If <code>true</code>, <code>UIApplication.isIdleTimerDisabled</code> is set to <code>true</code> in <code>viewWillAppear(_:)</code> and <code>false</code> in <code>viewWillDisappear(_:)</code>. If your application manages the idle timer itself, set this property to <code>false</code>.
@property (nonatomic) BOOL shouldManageApplicationIdleTimer;
/// Bool which should be set to true if a CarPlayNavigationView is also being used.
@property (nonatomic) BOOL isUsedInConjunctionWithCarPlayWindow;
/// A Boolean value that determines whether the map annotates the locations at which instructions are spoken for debugging purposes.
@property (nonatomic) BOOL annotatesSpokenInstructions;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end





@class NGLAnnotationImage;
@class NGLAnnotationView;

@interface NBNavigationViewController (SWIFT_EXTENSION(NbmapNavigation)) <NGLMapViewDelegate>
- (NGLAnnotationImage * _Nullable)mapView:(NGLMapView * _Nonnull)mapView imageForAnnotation:(id <NGLAnnotation> _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
- (NGLAnnotationView * _Nullable)mapView:(NGLMapView * _Nonnull)mapView viewForAnnotation:(id <NGLAnnotation> _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
- (void)mapView:(NGLMapView * _Nonnull)mapView didSelectAnnotation:(id <NGLAnnotation> _Nonnull)annotation;
@end


@interface NBNavigationViewController (SWIFT_EXTENSION(NbmapNavigation)) <NBStyleManagerDelegate>
- (CLLocation * _Nullable)locationForStyleManager:(NBStyleManager * _Nonnull)styleManager SWIFT_WARN_UNUSED_RESULT;
- (void)styleManager:(NBStyleManager * _Nonnull)styleManager didApply:(NBStyle * _Nonnull)style;
- (void)styleManagerDidRefreshAppearance:(NBStyleManager * _Nonnull)styleManager;
@end



@interface NBNavigationViewController (SWIFT_EXTENSION(NbmapNavigation)) <NBNavigationMapViewDelegate>
- (NGLStyleLayer * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView routeStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(NGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (NGLStyleLayer * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView routeCasingStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(NGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (NGLStyleLayer * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView waypointSymbolStyleLayerWithIdentifier:(NSString * _Nonnull)identifier waypoints:(NSArray<NBWaypoint *> * _Nonnull)waypoints source:(NGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (NGLShape * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView shapeForWaypoints:(NSArray<NBWaypoint *> * _Nonnull)waypoints legIndex:(NSInteger)legIndex SWIFT_WARN_UNUSED_RESULT;
- (NGLShape * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView shapeForRoutes:(NSArray<NBNavRoute *> * _Nonnull)routes SWIFT_WARN_UNUSED_RESULT;
- (void)navigationMapView:(NBNavigationMapView * _Nonnull)mapView didSelectRoute:(NBNavRoute * _Nonnull)route;
- (void)navigationMapView:(NBNavigationMapView * _Nonnull)mapView didSelectWaypoint:(NBWaypoint * _Nonnull)waypoint;
- (NGLShape * _Nullable)navigationMapView:(NBNavigationMapView * _Nonnull)mapView simplifiedShapeForRoute:(NBNavRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
- (void)mapView:(NGLMapView * _Nonnull)mapView didFinishLoadingStyle:(NGLStyle * _Nonnull)style;
@end



/// :nodoc:
IB_DESIGNABLE
SWIFT_CLASS("_TtC15NbmapNavigation14NextBannerView")
@interface NextBannerView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
@end


/// :nodoc:
SWIFT_CLASS("_TtC15NbmapNavigation20NextInstructionLabel")
@interface NextInstructionLabel : NBInstructionLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// <code>NightStyle</code> is the default night style for Nbmap Navigation SDK. Only will be applied when necessary and if <code>automaticallyAdjustStyleForSunPosition</code>.
SWIFT_CLASS_NAMED("NightStyle")
@interface NBNightStyle : NBDayStyle
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)apply;
@end


SWIFT_CLASS_NAMED("OverviewButton")
@interface NBOverviewButton : NBFloatingButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("PrimaryLabel")
@interface NBPrimaryLabel : NBInstructionLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("ProgressBar")
@interface NBProgressBar : UIView
@property (nonatomic, strong) UIColor * _Nonnull barColor;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("ReportButton")
@interface NBReportButton : NBButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
IB_DESIGNABLE
SWIFT_CLASS_NAMED("ResumeButton")
@interface NBResumeButton : UIControl
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForInterfaceBuilder;
@end



/// A view that displays the duration of a route as a symbol on the map.
SWIFT_CLASS("_TtC15NbmapNavigation19RouteDurationSymbol")
@interface RouteDurationSymbol : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@class AVAudioPlayer;
@class AVSpeechSynthesizer;
@class AVSpeechUtterance;
@class NSNotification;

/// The <code>RouteVoiceController</code> class provides voice guidance.
SWIFT_CLASS_NAMED("RouteVoiceController")
@interface NBRouteVoiceController : NSObject <AVSpeechSynthesizerDelegate>
/// If true, a noise indicating the user is going to be rerouted will play prior to rerouting.
@property (nonatomic) BOOL playRerouteSound;
/// Sound to play prior to reroute. Inherits volume level from <code>volume</code>.
@property (nonatomic, strong) AVAudioPlayer * _Nonnull rerouteSoundPlayer;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didFinishSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)didPassSpokenInstructionPointWithNotification:(NSNotification * _Nonnull)notification;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS_NAMED("SecondaryLabel")
@interface NBSecondaryLabel : NBInstructionLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("SeparatorView")
@interface NBSeparatorView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

enum SpeedLimitStyleKitResizingBehavior : NSInteger;

SWIFT_CLASS("_TtC15NbmapNavigation18SpeedLimitStyleKit")
@interface SpeedLimitStyleKit : NSObject
/// / Drawing Methods
+ (void)drawMUTCDWithFrame:(CGRect)targetFrame resizing:(enum SpeedLimitStyleKitResizingBehavior)resizing signBackColor:(UIColor * _Nonnull)signBackColor strokeColor:(UIColor * _Nonnull)strokeColor limit:(NSString * _Nonnull)limit legend:(NSString * _Nonnull)legend;
+ (void)drawViennaWithFrame:(CGRect)targetFrame resizing:(enum SpeedLimitStyleKitResizingBehavior)resizing signBackColor:(UIColor * _Nonnull)signBackColor strokeColor:(UIColor * _Nonnull)strokeColor regulatoryColor:(UIColor * _Nonnull)regulatoryColor limit:(NSString * _Nonnull)limit;
+ (void)drawSpeedOnlyWithFrame:(CGRect)targetFrame resizing:(enum SpeedLimitStyleKitResizingBehavior)resizing signBackColor:(UIColor * _Nonnull)signBackColor strokeColor:(UIColor * _Nonnull)strokeColor speed:(NSString * _Nonnull)speed measurement:(NSString * _Nonnull)measurement;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SpeedLimitStyleKitResizingBehavior, "ResizingBehavior", open) {
  SpeedLimitStyleKitResizingBehaviorAspectFit = 0,
/// The content is proportionally resized to fit into the target rectangle.
  SpeedLimitStyleKitResizingBehaviorAspectFill = 1,
/// The content is proportionally resized to completely fill the target rectangle.
  SpeedLimitStyleKitResizingBehaviorStretch = 2,
/// The content is stretched to match the entire target rectangle.
  SpeedLimitStyleKitResizingBehaviorCenter = 3,
};


/// A view that displays a speed limit and resembles a real-world speed limit sign.
SWIFT_CLASS("_TtC15NbmapNavigation9SpeedView")
@interface SpeedView : UIView
/// The sign’s background color.
@property (nonatomic, strong) UIColor * _Nonnull signBackColor;
/// The color of the text on the sign.
/// This color is also used for the border of an MUTCD-style sign.
@property (nonatomic, strong) UIColor * _Nonnull textColor;
/// The color of the border of a regulatory sign according to the Vienna Convention.
@property (nonatomic, strong) UIColor * _Nonnull regulatoryBorderColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)drawRect:(CGRect)rect;
@end



/// :nodoc:
/// A translucent bar that responds to tap and swipe gestures, similar to a scrubber or stepper control, and expands and collapses to maximize screen real estate.
IB_DESIGNABLE
SWIFT_CLASS("_TtC15NbmapNavigation10StatusView")
@interface StatusView : UIControl
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15NbmapNavigation19StepInstructionView")
@interface StepInstructionView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("StepInstructionsView")
@interface NBStepInstructionsView : BaseInstructionsBannerView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("StepListIndicatorView")
@interface NBDraggableView : UIView
@property (nonatomic, copy) NSArray<UIColor *> * _Nonnull gradientColors;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15NbmapNavigation22StepSwitchContenerView")
@interface StepSwitchContenerView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("StepTableViewCell")
@interface NBStepTableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForReuse;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("StepsBackgroundView")
@interface NBStepsBackgroundView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("StepsInstructionView")
@interface NBStepsInstructionView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("StepsViewController")
@interface NBStepsViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NBStepsViewController (SWIFT_EXTENSION(NbmapNavigation)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end

@class UITableView;

@interface NBStepsViewController (SWIFT_EXTENSION(NbmapNavigation)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface NBStepsViewController (SWIFT_EXTENSION(NbmapNavigation)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end







SWIFT_CLASS_NAMED("StyleKitMarker")
@interface NBStyleKitMarker : NSObject
/// / Drawing Methods
+ (void)drawMarkerWithFrame:(CGRect)frame innerColor:(UIColor * _Nonnull)innerColor shadowColor:(UIColor * _Nonnull)shadowColor pinColor:(UIColor * _Nonnull)pinColor strokeColor:(UIColor * _Nonnull)strokeColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A manager that handles <code>Style</code> objects. The manager listens for significant time changes
/// and changes to the content size to apply an approriate style for the given condition.
SWIFT_CLASS_NAMED("StyleManager")
@interface NBStyleManager : NSObject
/// The receiver of the delegate. See <code>StyleManagerDelegate</code> for more information.
@property (nonatomic, weak) id <NBStyleManagerDelegate> _Nullable delegate;
/// Determines whether the style manager should apply a new style given the time of day.
/// precondition:
/// Two styles must be provided for this property to have any effect.
@property (nonatomic) BOOL automaticallyAdjustsStyleForTimeOfDay;
/// The styles that are in circulation. Active style is set based on
/// the sunrise and sunset at your current location. A change of
/// preferred content size by the user will also trigger an update.
/// precondition:
/// Two styles must be provided for
/// <code>StyleManager.automaticallyAdjustsStyleForTimeOfDay</code> to have any effect.
@property (nonatomic, copy) NSArray<NBStyle *> * _Nonnull styles;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM_NAMED(NSInteger, NBStyleType, "StyleType", open) {
  NBStyleTypeDay = 0,
  NBStyleTypeNight = 1,
};


/// :nodoc:
SWIFT_CLASS_NAMED("SubtitleLabel")
@interface NBSubtitleLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// <code>SpeechSynthesizing</code> implementation, using <code>AVSpeechSynthesizer</code>.
SWIFT_CLASS("_TtC15NbmapNavigation23SystemSpeechSynthesizer")
@interface SystemSpeechSynthesizer : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface SystemSpeechSynthesizer (SWIFT_EXTENSION(NbmapNavigation)) <AVSpeechSynthesizerDelegate>
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didStartSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didContinueSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didFinishSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didPauseSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didCancelSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("TimeRemainingLabel")
@interface NBTimeRemainingLabel : NBStylableLabel
@property (nonatomic, strong) UIColor * _Nonnull trafficUnknownColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficLowColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficModerateColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficHeavyColor;
@property (nonatomic, strong) UIColor * _Nonnull trafficSevereColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS_NAMED("TitleLabel")
@interface NBTitleLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("TopBannerView")
@interface NBTopBannerView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A view controller that displays the current maneuver instruction as a “banner” flush with the edges of the containing view. The user swipes to one side to preview a subsequent maneuver.
/// This class is the default top banner view controller used by <code>NavigationOptions</code> and <code>NavigationViewController</code>. <code>InstructionsCardViewController</code> provides an alternative, user notification–like interface.
SWIFT_CLASS("_TtC15NbmapNavigation23TopBannerViewController")
@interface TopBannerViewController : UIViewController
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
@end










@interface UIDevice (SWIFT_EXTENSION(NbmapNavigation))
/// Returns a <code>Bool</code> whether the device is plugged in. Returns false if not an iOS device.
@property (nonatomic, readonly) BOOL isPluggedIn;
@end



@interface UIFont (SWIFT_EXTENSION(NbmapNavigation))
/// Returns an adjusted font for the <code>preferredContentSizeCategory</code>.
@property (nonatomic, readonly, strong) UIFont * _Nonnull adjustedFont;
@end
















/// A view representing the user’s location on screen.
SWIFT_CLASS("_TtC15NbmapNavigation18UserPuckCourseView")
@interface UserPuckCourseView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




/// :nodoc:
SWIFT_CLASS_NAMED("WayNameLabel")
@interface NBWayNameLabel : NBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class CALayer;

/// :nodoc:
SWIFT_CLASS_NAMED("WayNameView")
@interface NBWayNameView : UIView
@property (nonatomic, readonly, strong) CALayer * _Nonnull layer;
/// The background color of the <code>WayNameView</code>.
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
/// The color of the <code>WayNameView</code>’s border.
@property (nonatomic, strong) UIColor * _Nullable borderColor;
/// The width of the <code>WayNameView</code>’s border.
@property (nonatomic) CGFloat borderWidth;
/// The radius of the <code>WayNameView</code>’s corner. By default corner radius is set to half of
/// <code>WayNameView</code>’s height.
@property (nonatomic) CGFloat cornerRadius;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC15NbmapNavigation14WayPointSymbol")
@interface WayPointSymbol : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end



SWIFT_CLASS("_TtC15NbmapNavigation19WaypointArrivedCell")
@interface WaypointArrivedCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
